plugins {
    id 'org.springframework.boot' version "$springbootVersion"
}
apply plugin: 'io.spring.dependency-management'
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
def shortCommitId = 'git log -1 --pretty=%h'.execute([], project.rootDir).text.trim()
version "$projectVersion-$shortCommitId"
apply plugin: 'distribution' //打包tar包用到的插件
def packageName = "${project.name}-${version}"
// 复制配置文件
task copyConf(type: Copy) {
    from('src/main/resources/application-apollo.yml')
    from('src/main/resources/application-platon.yml')
    from('release/start.sh')
    from('release/stop.sh')
    from('jasypt.properties')
    from("build/libs/${packageName}.jar")
    into('build/package')
}

task buildTar(dependsOn: [
        'build',
        copyConf
]) {}

distributions {
    monitor {
        baseName = project.name
        contents {
            from { 'build/package' }
        }
    }
}

monitorDistTar.dependsOn 'copyConf'
monitorDistTar.compression = Compression.GZIP
monitorDistTar.archiveExtension.set('tar.gz')

remotes {
    platonEnv {
        host = "$deployServerHost"
        user = "$deployServerUser"
        port = Integer.parseInt("$deployServerPort")
        password = "$deployServerPassword"
    }
}

task deployToTestEnv(dependsOn: ['build'], group: 'deploy') {
    def deployDir = "$deployRootDir"
    def activeProfile = "$deployProfile"
    doLast {
        ssh.settings {
            knownHosts = allowAnyHosts
            pty = true
        }
        ssh.run {
            session(remotes.platonEnv) {
                execute "mkdir -p $deployDir && rm -rf $deployDir/${project.name}*.jar"
                put from: "${buildDir}/libs/${packageName}.jar", into: "$deployDir"
                put from: "${projectDir}/src/main/resources/application-platon.yml", into: "$deployDir"
                put from: "${projectDir}/src/main/resources/application-apollo.yml", into: "$deployDir"
                put from: "${projectDir}/release/start.sh", into: "$deployDir"
                put from: "${projectDir}/release/stop.sh", into: "$deployDir"
                put from: "${projectDir}/jasypt.properties", into: "$deployDir"
                execute "cd $deployDir && ${deployFixScript} && chmod a+x *.sh"
                execute "cd $deployDir && ./start.sh $activeProfile"
            }
        }
    }
}


dependencies {
    compile project(":scan-service")
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.4'
    compile "com.alibaba:druid-spring-boot-starter:$druidVersion"
    runtimeOnly "mysql:mysql-connector-java:$mysqlConnectorVersion"
    compile "com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.2"
    compile "org.jsoup:jsoup:$jsoupVersion"
}
