package com.platon.browser.dao.mapper;

import com.github.pagehelper.Page;
import com.platon.browser.dao.entity.TokenInventory;
import com.platon.browser.dao.entity.TokenInventoryExample;
import com.platon.browser.dao.entity.TokenInventoryWithBLOBs;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface TokenInventoryMapper {
    long countByExample(TokenInventoryExample example);

    int deleteByExample(TokenInventoryExample example);

    int deleteByPrimaryKey(Long id);

    int insert(TokenInventoryWithBLOBs record);

    int insertSelective(TokenInventoryWithBLOBs record);

    Page<TokenInventoryWithBLOBs> selectByExampleWithBLOBs(TokenInventoryExample example);

    Page<TokenInventory> selectByExample(TokenInventoryExample example);

    TokenInventoryWithBLOBs selectByPrimaryKey(Long id);

    int updateByExampleSelective(@Param("record") TokenInventoryWithBLOBs record, @Param("example") TokenInventoryExample example);

    int updateByExampleWithBLOBs(@Param("record") TokenInventoryWithBLOBs record, @Param("example") TokenInventoryExample example);

    int updateByExample(@Param("record") TokenInventory record, @Param("example") TokenInventoryExample example);

    int updateByPrimaryKeySelective(TokenInventoryWithBLOBs record);

    int updateByPrimaryKeyWithBLOBs(TokenInventoryWithBLOBs record);

    int updateByPrimaryKey(TokenInventory record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table token_inventory
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int batchInsert(@Param("list") List<TokenInventoryWithBLOBs> list);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table token_inventory
     *
     * @mbg.generated
     * @project https://github.com/itfsw/mybatis-generator-plugin
     */
    int batchInsertSelective(@Param("list") List<TokenInventoryWithBLOBs> list, @Param("selective") TokenInventoryWithBLOBs.Column ... selective);
    /**
     * 查询需要更新的NFT资产列表，（合约是有效的，没有被销毁）
     * 条件是：token_url is not null and image is null and retry_num < 3
     * @param offset
     * @param pageSize
     * @return
     */
    List<com.platon.browser.dao.entity.NftObject> listValidTokenInventoryWithEmptyImage(@Param("offset")int offset, @Param("pageSize")int pageSize);

    /**
     * 查询需要补齐URLNFT资产列表（合约是有效的，没有被销毁）
     * 条件是：token_url is not null and image is null and retry_num < 3
     * @param offset
     * @param pageSize
     * @return
     */
    List<com.platon.browser.dao.entity.NftObject> listValidTokenInventoryWithEmptyUrl(@Param("offset")int offset, @Param("pageSize")int pageSize);
}
