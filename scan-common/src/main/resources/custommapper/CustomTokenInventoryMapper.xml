<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.custommapper.CustomTokenInventoryMapper">
    <insert id="batchInsertOrUpdateSelective" parameterType="map">
        replace into token_inventory (
        <foreach collection="selective" item="column" separator=",">
            ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'token_address'.toString() == column.value">
                    #{item.tokenAddress,jdbcType=VARCHAR}
                </if>
                <if test="'token_id'.toString() == column.value">
                    #{item.tokenId,jdbcType=VARCHAR}
                </if>
                <if test="'owner'.toString() == column.value">
                    #{item.owner,jdbcType=VARCHAR}
                </if>
                <if test="'name'.toString() == column.value">
                    #{item.name,jdbcType=VARCHAR}
                </if>
                <if test="'description'.toString() == column.value">
                    #{item.description,jdbcType=VARCHAR}
                </if>
                <if test="'image'.toString() == column.value">
                    #{item.image,jdbcType=VARCHAR}
                </if>
                <if test="'create_time'.toString() == column.value">
                    #{item.createTime,jdbcType=TIMESTAMP}
                </if>
                <if test="'update_time'.toString() == column.value">
                    #{item.updateTime,jdbcType=TIMESTAMP}
                </if>
                <if test="'token_tx_qty'.toString() == column.value">
                    #{item.tokenTxQty,jdbcType=INTEGER}
                </if>
                <if test="'token_owner_tx_qty'.toString() == column.value">
                    #{item.tokenOwnerTxQty,jdbcType=INTEGER}
                </if>
                <if test="'small_image'.toString() == column.value">
                    #{item.smallImage}
                </if>
                <if test="'medium_image'.toString() == column.value">
                    #{item.mediumImage}
                </if>
                <if test="'id'.toString() == column.value">
                    #{item.id}
                </if>
            </foreach>
            )
        </foreach>
    </insert>

    <delete id="burnAndDelTokenInventory">
        <foreach collection="list" item="item" separator=";">
            delete from token_inventory
            where token_address = #{item.tokenAddress} and token_id = #{item.tokenId}
        </foreach>
    </delete>

    <select id="selectTokenInventory" resultType="com.platon.browser.bean.CustomTokenInventory">
        SELECT
            ti.token_address AS tokenAddress,
            ti.token_id AS tokenId,
            ti.OWNER AS OWNER,
            ti.NAME AS NAME,
            ti.description,
            ti.image,
            ti.create_time AS createTime,
            ti.update_time AS updateTime,
            ti.token_tx_qty AS tokenTxQty,
            t.NAME AS tokenName,
            t.symbol AS symbol
        FROM
            token_inventory ti
                LEFT JOIN token t ON ti.token_address = t.address
        where ti.token_address = #{tokenAddress,jdbcType=VARCHAR}
          and ti.token_id = #{tokenId,jdbcType=VARCHAR}
    </select>

    <select id="findErc721ContractDestroyBalance" parameterType="string" resultType="com.platon.browser.bean.Erc721ContractDestroyBalanceVO">
        select
            t2.token_address as tokenAddress ,
            t2.owner ,
            count(1) as num
        from
            (
                select
                    t1.token_address ,
                    t1.token_id ,
                    t1.owner
                from
                    token_inventory t1
                where
                    t1.token_address = #{tokenAddress}
            ) t2
        group by
            t2.owner
    </select>

    <update id="batchUpdateTokenInfo">
        <foreach collection="list" item="item" separator=";">
            update token_inventory
            <set>
                <if test="item.name != null">
                    `name` = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.image != null">
                    image = #{item.image,jdbcType=VARCHAR},
                </if>
                <if test="item.description != null">
                    description = #{item.description,jdbcType=LONGVARCHAR},
                </if>
            </set>
            where token_address = #{item.tokenAddress,jdbcType=VARCHAR} and token_id = #{item.tokenId,jdbcType=VARCHAR}
        </foreach>
    </update>

</mapper>