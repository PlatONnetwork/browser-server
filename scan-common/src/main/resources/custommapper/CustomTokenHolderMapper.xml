<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.custommapper.CustomTokenHolderMapper">
    <select id="selectListByParams" parameterType="java.lang.String"
            resultType="com.platon.browser.bean.CustomTokenHolder">
        select
        th.token_address as tokenAddress,
        th.address,
        t.type,
        t.symbol,
        t.name,
        t.total_supply as totalSupply,
        th.balance,
        t.decimal,
        th.token_tx_qty as txCount,
        t.create_time as createTime
        from token_holder th left join token t on th.token_address = t.address
        where th.balance != '0'
        <if test="tokenAddress != null">
            and th.token_address = #{tokenAddress}
        </if>
        <if test="address != null">
            and th.address = #{address}
        </if>
        <if test="type != null">
            AND t.type = #{type}
        </if>
        order by balance desc
    </select>
    <select id="selectERC721Holder" parameterType="java.lang.String"
            resultType="com.platon.browser.bean.CustomTokenHolder">
        select th.token_address as tokenAddress,
               th.address,
               t.type,
               t.symbol,
               t.name,
               t.total_supply   as totalSupply,
               th.balance,
               t.decimal,
               th.token_tx_qty  as txCount
        from token_holder th
                 left join token t on th.token_address = t.address
        where th.token_address = #{tokenAddress}
          AND t.type = 'erc721'
        order by balance desc
    </select>

    <select id="findErc721TokenHolder" parameterType="java.lang.String" resultType="com.platon.browser.bean.CustomTokenHolder">
        SELECT
        th.token_address AS tokenAddress,
        th.address,
        ti.token_id AS tokenId,
        t.type,
        t.symbol,
        t.NAME,
        t.total_supply AS totalSupply,
        ti.token_owner_tx_qty AS txCount
        FROM
        token_inventory ti
        LEFT JOIN token_holder th ON th.token_address = ti.token_address
        LEFT JOIN token t ON th.token_address = t.address
        WHERE
        th.balance != '0'
        <if test="tokenAddress != null">
            and th.token_address = #{tokenAddress}
        </if>
        <if test="address != null">
            AND th.address = #{address}
            AND ti.`owner` = #{address}
        </if>
        <if test="type != null">
            AND t.type = #{type}
        </if>
        ORDER BY
        balance DESC
    </select>

    <insert id="batchInsertOrUpdateSelective" parameterType="map">
        replace into token_holder (
        <foreach collection="selective" item="column" separator=",">
            ${column.escapedColumnName}
        </foreach>
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
            <foreach collection="selective" item="column" separator=",">
                <if test="'token_address'.toString() == column.value">
                    #{item.tokenAddress,jdbcType=VARCHAR}
                </if>
                <if test="'address'.toString() == column.value">
                    #{item.address,jdbcType=VARCHAR}
                </if>
                <if test="'token_id'.toString() == column.value">
                    #{item.tokenId,jdbcType=VARCHAR}
                </if>
                <if test="'balance'.toString() == column.value">
                    #{item.balance,jdbcType=DECIMAL}
                </if>
                <if test="'create_time'.toString() == column.value">
                    #{item.createTime,jdbcType=TIMESTAMP}
                </if>
                <if test="'update_time'.toString() == column.value">
                    #{item.updateTime,jdbcType=TIMESTAMP}
                </if>
                <if test="'token_tx_qty'.toString() == column.value">
                    #{item.tokenTxQty,jdbcType=INTEGER}
                </if>
            </foreach>
            )
        </foreach>
    </insert>

    <update id="batchUpdate">
        <foreach collection="list" item="item" separator=";">
            update token_holder set balance=#{item.balance} where token_address=#{item.tokenAddress} and address=#{item.address}
        </foreach>
    </update>

    <select id="findTokenHolderCount" resultType="com.platon.browser.bean.TokenHolderCount">
        select t.token_address as tokenAddress, count(1) as tokenHolderCount
        from token_holder t
        where t.balance != '0'
        group by t.token_address
    </select>

    <select id="selectListByERC721" parameterType="java.lang.String"
            resultType="com.platon.browser.bean.CustomTokenHolder">
        SELECT
        th.token_address AS tokenAddress,
        th.address,
        t.type,
        t.symbol,
        t.NAME,
        t.total_supply AS totalSupply,
        th.balance,
        t.DECIMAL,
        ti.token_owner_tx_qty AS txCount,
        ti.token_id as tokenId,
        t.create_time as createTime
        FROM
        token_holder th
        LEFT JOIN token t ON th.token_address = t.address
        LEFT JOIN token_inventory ti ON th.address = ti.`owner`
        AND th.token_address = ti.token_address
        WHERE
        th.balance != '0'
        <if test="tokenAddress != null">
            and th.token_address = #{tokenAddress}
        </if>
        <if test="address != null">
            and th.address = #{address}
        </if>
        AND t.type = "erc721"
        ORDER BY
        balance DESC
    </select>

    <select id="getZeroBalanceTokenHolderList" resultType="com.platon.browser.dao.entity.TokenHolder">
        SELECT th.token_address AS tokenAddress,
               th.address
        FROM token_holder th
                 JOIN token t ON th.token_address = t.address
        WHERE th.balance = '0'
          AND t.type = #{type}
        ORDER BY #{orderby}
        LIMIT #{offset}, #{limit}
    </select>
</mapper>