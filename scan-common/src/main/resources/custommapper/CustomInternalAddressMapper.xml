<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.custommapper.CustomInternalAddressMapper">

  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.InternalAddress" extends="com.platon.browser.dao.mapper.InternalAddressMapper.BaseResultMap"/>

  <insert id="batchInsertOrUpdateSelective" parameterType="map">
    replace into internal_address (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'balance'.toString() == column.value">
          #{item.balance,jdbcType=DECIMAL}
        </if>
        <if test="'restricting_balance'.toString() == column.value">
          #{item.restrictingBalance,jdbcType=DECIMAL}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>

  <select id="countBalance" resultType="com.platon.browser.bean.CountBalance">
    select
      `type`,
      SUM(`balance`) as free,
      SUM(`restricting_balance`) as locked
    from
      `internal_address`
    where
      (`type` = 0
        and is_calculate = 1)
       or `type` != 0
    group by
      `type`
  </select>
  <select id="listCalculableFoundationAddress" resultType="java.lang.String">
    select address from internal_address where type = 0 and is_calculate = 1
  </select>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    address, `name`, `type`, balance, restricting_balance, is_show, is_calculate, create_id,
    create_name, create_time, update_id, update_name, update_time
  </sql>

  <select id="selectListByExample" parameterType="com.platon.browser.dao.entity.InternalAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from internal_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

</mapper>
